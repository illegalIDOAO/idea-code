<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.entity.Order">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="order_money" jdbcType="DECIMAL" property="orderMoney" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="car_id" jdbcType="INTEGER" property="carId" />
    <result column="service_type_id" jdbcType="INTEGER" property="serviceTypeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, order_money, state, create_time, car_id, service_type_id
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.entity.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      `order` by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `order`
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.entity.OrderExample">
    delete from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.entity.Order" useGeneratedKeys="true" keyProperty="id">
    insert into `order` (id, order_money, state,
      create_time, car_id, service_type_id
      )
    values (#{id,jdbcType=INTEGER}, #{orderMoney,jdbcType=DECIMAL}, #{state,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{carId,jdbcType=INTEGER}, #{serviceTypeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.entity.Order" useGeneratedKeys="true" keyProperty="id">
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="orderMoney != null">
        order_money,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="carId != null">
        car_id,
      </if>
      <if test="serviceTypeId != null">
        service_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="orderMoney != null">
        #{orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="carId != null">
        #{carId,jdbcType=INTEGER},
      </if>
      <if test="serviceTypeId != null">
        #{serviceTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.entity.OrderExample" resultType="java.lang.Long">
    select count(*) from `order`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>


  <resultMap id="orderWithCarAndCustomerMap" type="com.kaishengit.entity.Order" extends="BaseResultMap">
    <association property="car" javaType="com.kaishengit.entity.Car">
      <id column="car_id" property="id"/>
      <result column="car_type" property="carType"/>
      <result column="car_no" property="carNo"/>
      <result column="licence_no" property="licenceNo"/>
      <result column="color" property="color"/>
    </association>
    <association property="customer" javaType="com.kaishengit.entity.Customer">
      <id column="customer_id" property="id"/>
      <result column="id_card" property="idCard"/>
      <result column="user_name" property="userName"/>
      <result column="tel" property="tel"/>
    </association>
  </resultMap>
  <select id="selectByMap" resultMap="orderWithCarAndCustomerMap">
    SELECT
      o.*, car.car_type,
      car.licence_no,
      car.car_no,
      car.customer_id,
      c.user_name,
      c.id_card,
      c.tel
    FROM
      `order` as o
    LEFT JOIN car ON o.car_id = car.id
    LEFT JOIN customer as c ON car.customer_id = c.id
    <where>
      <if test="state != null and state != ''">
        AND o.state = #{state}
      </if>
      <if test="exState != null and exState != ''">
        AND o.state != #{exState}
      </if>
      <if test="carLiNo != null and carLiNo != ''">
        AND car.licence_no like concat('%',#{carLiNo},'%')
      </if>
      <if test="ownerName != null and ownerName != ''">
        AND c.user_name like concat('%',#{ownerName},'%')
      </if>
      <if test="startTime != null and startTime != ''">
        AND o.create_time >= #{startTime}
      </if>
      <if test="endTime != null and endTime != ''">
        AND o.create_time &lt;=  #{endTime}
      </if>
    </where>
    order by o.create_time desc
  </select>
  <select id="selectWihtCarInfo" resultMap="orderWithCarAndCustomerMap">
      SELECT
          `order`.*, car.car_type,
          car.licence_no,
          car.car_no,
          car.customer_id,
          car.color,
          customer.user_name,
          customer.id_card,
          customer.tel
      FROM
          `order`
      LEFT JOIN car ON `order`.car_id = car.id
      LEFT JOIN customer ON car.customer_id = customer.id
      where `order`.id = #{id}
    </select>
  <update id="updateByExampleSelective" parameterType="map">
    update `order`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.orderMoney != null">
        order_money = #{record.orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.carId != null">
        car_id = #{record.carId,jdbcType=INTEGER},
      </if>
      <if test="record.serviceTypeId != null">
        service_type_id = #{record.serviceTypeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update `order`
    set id = #{record.id,jdbcType=INTEGER},
      order_money = #{record.orderMoney,jdbcType=DECIMAL},
      state = #{record.state,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      car_id = #{record.carId,jdbcType=INTEGER},
      service_type_id = #{record.serviceTypeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.entity.Order">
    update `order`
    <set>
      <if test="orderMoney != null">
        order_money = #{orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="carId != null">
        car_id = #{carId,jdbcType=INTEGER},
      </if>
      <if test="serviceTypeId != null">
        service_type_id = #{serviceTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.entity.Order">
    update `order`
    set order_money = #{orderMoney,jdbcType=DECIMAL},
      state = #{state,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      car_id = #{carId,jdbcType=INTEGER},
      service_type_id = #{serviceTypeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>