<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kaishengit.mapper.PartsStreamMapper">
  <resultMap id="BaseResultMap" type="com.kaishengit.entity.PartsStream">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="parts_id" jdbcType="INTEGER" property="partsId" />
    <result column="pre_inventory" jdbcType="INTEGER" property="preInventory" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="after_inventory" jdbcType="INTEGER" property="afterInventory" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parts_id, pre_inventory, num, after_inventory, employee_id, type, create_time
  </sql>
  <select id="selectByExample" parameterType="com.kaishengit.entity.PartsStreamExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from parts_stream
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from parts_stream
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from parts_stream
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.kaishengit.entity.PartsStreamExample">
    delete from parts_stream
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.kaishengit.entity.PartsStream">
    insert into parts_stream (id, parts_id, pre_inventory, 
      num, after_inventory, employee_id, 
      type, create_time)
    values (#{id,jdbcType=INTEGER}, #{partsId,jdbcType=INTEGER}, #{preInventory,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{afterInventory,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.kaishengit.entity.PartsStream">
    insert into parts_stream
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="partsId != null">
        parts_id,
      </if>
      <if test="preInventory != null">
        pre_inventory,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="afterInventory != null">
        after_inventory,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="partsId != null">
        #{partsId,jdbcType=INTEGER},
      </if>
      <if test="preInventory != null">
        #{preInventory,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="afterInventory != null">
        #{afterInventory,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.kaishengit.entity.PartsStreamExample" resultType="java.lang.Long">
    select count(*) from parts_stream
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update parts_stream
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.partsId != null">
        parts_id = #{record.partsId,jdbcType=INTEGER},
      </if>
      <if test="record.preInventory != null">
        pre_inventory = #{record.preInventory,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.afterInventory != null">
        after_inventory = #{record.afterInventory,jdbcType=INTEGER},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update parts_stream
    set id = #{record.id,jdbcType=INTEGER},
      parts_id = #{record.partsId,jdbcType=INTEGER},
      pre_inventory = #{record.preInventory,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      after_inventory = #{record.afterInventory,jdbcType=INTEGER},
      employee_id = #{record.employeeId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.kaishengit.entity.PartsStream">
    update parts_stream
    <set>
      <if test="partsId != null">
        parts_id = #{partsId,jdbcType=INTEGER},
      </if>
      <if test="preInventory != null">
        pre_inventory = #{preInventory,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="afterInventory != null">
        after_inventory = #{afterInventory,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kaishengit.entity.PartsStream">
    update parts_stream
    set parts_id = #{partsId,jdbcType=INTEGER},
      pre_inventory = #{preInventory,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      after_inventory = #{afterInventory,jdbcType=INTEGER},
      employee_id = #{employeeId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>